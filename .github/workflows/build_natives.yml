name: CMake
on:
  push:
    branches:
      - "**"

env:
  BUILD_TYPE: Release
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "8"
      - name: Configure CMake
        run: |
          cd ${{github.workspace}}/libjpeg-turbo
          mkdir build
          cd build
          cmake -G"Unix Makefiles" -DWITH_JAVA=1 ../
      - name: Build
        run: |
          cd ${{github.workspace}}/libjpeg-turbo/build
          make -j3
      - uses: actions/upload-artifact@v4
        with:
          name: native-linux-amd64
          path: ${{github.workspace}}/libjpeg-turbo/build/libturbojpeg.so
  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "8"

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc g++ gfortran

      - name: Install cross-compilation tools for ARM64
        run: sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - name: Configure CMake for cross-compilation
        run: |
          cd ${{github.workspace}}/libjpeg-turbo
          mkdir build
          cd build
          cmake \
            -G"Unix Makefiles"
            -DWITH_JAVA=1
            -DCMAKE_SYSTEM_NAME=Linux \
            -DCMAKE_SYSTEM_PROCESSOR=aarch64 \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ ../

      - name: Build
        run: |
          cd ${{github.workspace}}/libjpeg-turbo/build
          make -j3

      - uses: actions/upload-artifact@v4
        with:
          name: native-linux-arm64
          path: ${{github.workspace}}/libjpeg-turbo/build/libturbojpeg.so
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "11"
      - name: Configure CMake
        run: |
          cd ${{github.workspace}}/libjpeg-turbo
          mkdir build
          cd build
          cmake -T G"NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DWITH_JAVA=1 ../

      - name: Build
        run: |
          cd ${{github.workspace}}/libjpeg-turbo/build
          nmake -j3
      - uses: actions/upload-artifact@v4
        with:
          name: native-windows-amd64
          path: ${{github.workspace}}\libjpeg-turbo/build\*.dll
  build-mac:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "11"
      - name: Configure CMake
        run: |
          cd ${{github.workspace}}/libjpeg-turbo
          mkdir build
          cd build
          cmake -G"Unix Makefiles" -DWITH_JAVA=1 ../
      - name: Build
        run: |
          cd ${{github.workspace}}/libjpeg-turbo/build
          make -j3
      - uses: actions/upload-artifact@v4
        with:
          name: native-mac-amd64
          path: ${{github.workspace}}/libjpeg-turbo/build/*.dylib
  build-mac-arm:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: "11"
      - name: Configure CMake
        run: |
          cd ${{github.workspace}}/libjpeg-turbo
          mkdir build
          cd build
          cmake -G"Unix Makefiles" -DWITH_JAVA=1 ../
      - name: Build
        run: |
          cd ${{github.workspace}}/libjpeg-turbo/build
          make -j3
      - uses: actions/upload-artifact@v4
        with:
          name: native-mac-arm64
          path: ${{github.workspace}}/libjpeg-turbo/build/*.dylib

  upload-artifacts:
    needs:
      - build-linux
      - build-windows
      - build-mac
      - build-mac-arm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: native-windows-amd64
          path: ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v4
        with:
          name: native-linux-amd64
          path: ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v4
        with:
          name: native-linux-arm64
          path: ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v4
        with:
          name: native-mac-amd64
          path: ${{github.workspace}}/artifacts
      - uses: actions/download-artifact@v3
        with:
          name: native-mac-arm64
          path: ${{github.workspace}}/artifacts

      - name: Zip Files
        run: |
          cd ${{github.workspace}}/artifacts
          zip -r apriltagdesktop-natives.zip .

      - uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: natives-${{github.ref}}
          prerelease: true
          title: Natives from ${{github.ref}}
          files: |
            ${{github.workspace}}/artifacts/*